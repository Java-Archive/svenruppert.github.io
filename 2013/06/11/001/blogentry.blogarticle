Heute geht es um die Möglichkeit in einer CDI Umgebung per Annotationen Parameter zu übergeben.<br />
Als Beispiel nehme ich den SimpleDateFormatter. Typischerweise wird ein SimpleDateFormatter in der folgenden Form initialisiert. <br />
<strong>final SimpleDateFormat sdf = new SimpleDateFormat("yyyy:MM:dd hh:mm:ss");</strong><br />
Die erste <em>Verbesserung</em> hier ist die Verwendung einer zentralen Registry für die Definition der Pattern. ("<strong>yyyy:MM:dd hh:mm:ss</strong>"); Der Ausdruck selbst ist aber nicht kürzer und auch immer noch hart an die Registry gekoppelt. Der erste Ansatz per CDI ist dann ähnlich wie die Definition der Logger.<br />
<a href="http://lh3.ggpht.com/-r2zeedyN1k0/UbebNjwRjSI/AAAAAAABRYw/0yy6OCwmLdM/s1600-h/image%25255B13%25255D.png"><img alt="image" border="0" src="http://lh6.ggpht.com/-191qcxRsfRE/UbebObONx8I/AAAAAAABRY4/fI3ld349a2I/image_thumb%25255B7%25255D.png?imgmax=800" height="61" style="border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline;" title="image" width="244" /></a><br />
Die Annotation <strong>@CDICommons</strong> ist hier zur Abgrenzung zu den evtl. im ClassPath vorhandenen Implementierungen und Konstruktoren. Es empfhielt sich eine solche Annotation pro Modul zu verwenden. So können Mehrdeutigkeiten einfach gelöst werden. Die Annotation selbst ist schlicht aufgebaut.<br />
<a href="http://lh4.ggpht.com/-_4c_3vdowzc/UbebPtUSsLI/AAAAAAABRZA/K3IcusbLjxM/s1600-h/image%25255B11%25255D.png"><img alt="image" border="0" src="http://lh3.ggpht.com/-vT6jJzVdhVU/UbebQRmOKbI/AAAAAAABRZI/GgX-sHW6XYY/image_thumb%25255B5%25255D.png?imgmax=800" height="85" style="border-bottom-width: 0px; border-left-width: 0px; border-right-width: 0px; border-top-width: 0px; display: inline;" title="image" width="644" /></a> <br />
Da die die Implementation SimpleDateFormat keinen Default-Konstruktor hat, ist es notwendig eine Erzeuger-Methode zu implementieren. Die Annotation <strong>@Produces</strong> ist hier das einzig auffällige.<br />
<a href="http://lh5.ggpht.com/-tQJT9DRzTDw/UbebRSFEvJI/AAAAAAABRZQ/nhRNMXSn_wQ/s1600-h/image%25255B17%25255D.png"><img alt="image" border="0" src="http://lh5.ggpht.com/-TAPFVctYRAI/UbebSXXU9sI/AAAAAAABRZU/jyz_h2N_nJo/image_thumb%25255B11%25255D.png?imgmax=800" height="88" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-top: 0px; display: inline;" title="image" width="394" /></a> <br />
Zu erkennen ist auch hier die Verwendung der konstanten Definition <strong>PATTERN</strong>. Zumindest im Quelltext ist nur noch an einer Stelle ein Verweis auf das Pattern selbst. Was aber, wenn man diese nun dynamisch zu Laufzeit ermitteln und verwenden möchte? Den Zugriff auf die jeweiligen Registries sollen nicht im gesamten Quelltext zu sehen sein.<br />
Hier kann man den Weg über eine weitere Annotation gehen. Nennen wir sie <strong>@CDIRegEx</strong>.<br />
<a href="http://lh5.ggpht.com/-3PGIbElqIQw/UbebTc0EitI/AAAAAAABRZg/G1nELAuGKN4/s1600-h/image%25255B24%25255D.png"><img alt="image" border="0" src="http://lh3.ggpht.com/-RRzfUCYApfY/UbebUOCzTYI/AAAAAAABRZo/QS0gQbdwqJc/image_thumb%25255B16%25255D.png?imgmax=800" height="120" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-top: 0px; display: inline;" title="image" width="644" /></a> <br />
Die Implementierung ist um die Definition eines Values angereichert worden. Das wichtige allerdings ist die darin verwendete Annotation <strong>@Nonbinding</strong>. Damit erst wird es möglich dieses Attribut zu verwenden, ohne das der CDI-Container versucht dieses Attribut für die Auflösung selbst zu verwenden. Wird diese Annotation nicht eingesetzt, kann der CDI-Container nicht mehr die vermeintliche Erzeuger-Methode finden. <br />
&nbsp;<a href="http://lh6.ggpht.com/-qjNvmocLpxA/UbebVIoWCTI/AAAAAAABRZw/zDOXEq9NzmM/s1600-h/image%25255B28%25255D.png"><img alt="image" border="0" src="http://lh6.ggpht.com/-QHtUqUnRmm8/UbebVyAf9_I/AAAAAAABRZ4/Thcsxm2Awk4/image_thumb%25255B18%25255D.png?imgmax=800" height="177" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-top: 0px; display: inline;" title="image" width="644" /></a> <br />
Die Erzeuger-Methode wird um die Annotation <strong>@CDIRegex</strong> in der Signatur erweitert. Innerhalb der Methode wird die Annotation selbst als Auslöser für die Initialisierung verwendet. In diesem Fall nur , indem das Pattern aus dem Attribut verwendet wird. An dieer Stelle kann dann allerdings der Zugriff auf die Registry erfolgen, damit zur Laufzeit dynamisch entschieden werden, welches Pattern zu Einsatz kommen soll.<br />
Im Quelltext sind nun folgende Definitionen gültig, wobei die erste für eine Defaultinitialisierung verwendet wird.<br />
<a href="http://lh5.ggpht.com/-lbPoQul_Plw/UbebXKG5TCI/AAAAAAABRZ8/mQ-5KXpD0Ag/s1600-h/image%25255B33%25255D.png"><img alt="image" border="0" src="http://lh4.ggpht.com/-eHEcKPI7bDI/UbebX8px8kI/AAAAAAABRaI/ecUL8zwrYzI/image_thumb%25255B21%25255D.png?imgmax=800" height="119" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-top: 0px; display: inline;" title="image" width="244" /></a> <br />
<br />
Die Annotation CDIRegex kann auch in die Annotation CDICommons eingebettet werden. Das allerdings ist dann eher Geschmackssache, da der Code nicht reduziert wird.<br />
<a href="http://lh4.ggpht.com/-0nGX8_E14Yc/UbebY5yxroI/AAAAAAABRaQ/yDAeep8rMuc/s1600-h/image%25255B37%25255D.png"><img alt="image" border="0" src="http://lh5.ggpht.com/-Hvg0or1Z6u4/UbebZ0-yhXI/AAAAAAABRaY/YzuhvORMx-E/image_thumb%25255B23%25255D.png?imgmax=800" height="88" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-top: 0px; display: inline;" title="image" width="644" /></a> <br />
<a href="http://lh3.ggpht.com/-NnyDMiUODSk/UbebbQhelTI/AAAAAAABRac/EPqB22vbuGE/s1600-h/image%25255B42%25255D.png"><img alt="image" border="0" src="http://lh4.ggpht.com/-yx7CKFDVpfg/UbebcEGYy8I/AAAAAAABRao/r9pNUYullzg/image_thumb%25255B26%25255D.png?imgmax=800" height="60" style="border-bottom: 0px; border-left: 0px; border-right: 0px; border-top: 0px; display: inline;" title="image" width="394" /></a> <br />
Interessant ist allerdings, das nun alle drei vorgestellten Variablen-Definitionen gültig sind.<br />
Das Beispiel ist wie üblich im Repository zu finden: <a href="https://bitbucket.org/svenruppert/cdi-commons" target="_blank">Bitbucket - CDI-Commons</a>